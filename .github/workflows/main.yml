name: Automatic evaluator
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  evaluator:
    runs-on: self-hosted
    steps:
      - name: Fetch project repository
        uses: actions/checkout@v3

      - name: Setup MySQL Service
        run: |
          docker build -t super-port-db .
          docker run -d -p 3306:3306 --name=super-port-mysql-container -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=super_portfolio_database super-port-db

      - name: Fetch Blocked Files Checkout action
        uses: actions/checkout@v3
        with:
          repository: betrybe/blocked-files-checkout-action
          ref: v2
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/blocked-files-checkout

      - name: Fetch Flake8 linter
        uses: actions/checkout@v3
        with:
          repository: betrybe/flake8-linter-action
          ref: v1.3
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/flake8-linter

      - name: Fetch PyTest evaluator
        uses: actions/checkout@v3
        with:
          repository: betrybe/pytest-evaluator-action
          ref: v6.0
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/pytest-evaluator

      - name: Fetch Store evaluation
        uses: actions/checkout@v3
        with:
          repository: betrybe/store-evaluation-action
          ref: v8.0
          token: ${{ secrets.GIT_HUB_PAT }}
          path: .github/actions/store-evaluation

      - name: Restore protected files
        uses: ./.github/actions/blocked-files-checkout
        with:
          restore_branch: "main"

      - name: Set Python Version
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.1"

      - name: Install MySQL Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev   # Exemplo de instalação da biblioteca GTK
          sudo apt-get install -y python3-dev default-libmysqlclient-dev build-essential pkg-config

      - name: Run Flake8 linter
        id: flake8_linter
        uses: ./.github/actions/flake8-linter
        with:
          token: ${{ secrets.GIT_HUB_PAT }}
          pr_number: ${{ github.event.pull_request.number }}

      - name: Run PyTest evaluation
        id: evaluator
        uses: ./.github/actions/pytest-evaluator
        with:
          pr_author_username: ${{ github.event.pull_request.user.login }}
      
      - name: Stop MySQL Service
        run: |
          docker rm -f super-port-mysql-container
          docker rmi -f super-port-db

      - name: Run Store evaluation
        uses: ./.github/actions/store-evaluation
        with:
          evaluation-data: ${{ steps.evaluator.outputs.result }}
          environment: staging
          token: ${{ secrets.GIT_HUB_PAT }}
